---
title: "How does geom_smooth() make predictions"
date: '2024-02-26'
slug: model prediction
categories:
  - rstats
  - modeling
tags:
  - rstats
  - modeling
summary: "William Farr's Data on Cholera in London, 1849 is used to digg into a linear model output and compared with that made by geom_smooth(method='lm')"
execute: 
  eval: false
---

<center>![](https://media.giphy.com/media/v1.Y2lkPTc5MGI3NjExMTIzNW90ZGV3dnJhMTc3czF6MWtxOWlmZDd1bzM0ZDl2NmxjOTk3byZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/1WozRHfDOlVZqVjhlf/giphy.gif)</center>

**Linear regression** is a statistical technique used to represent the linear relationship between a response $(y)$ and a predictor $(x)$.

![](featured.png)

$$
y= \beta_0 + \beta_1x
$$

Below we examine some mismatch in output when plotting the prediction results of a linear model made with the `lm()` and the `predict()` functions versus the output produced by the `geom_smooth()` layer in a `ggplot()` visualization.

The data is from the `HistData::CholeraDeaths1849` dataset. We select just the deaths due to Cholera within 12 months in 1849, and visualize the trend in time of the number of deaths with the addition of a futher layer made with the `geom_smooth()`.

```         
?geom_smooth()

?HistData::CholeraDeaths1849
```

```{r}
#| message: false
#| warning: false

library(tidyverse)
library(HistData)
cholera <- HistData::CholeraDeaths1849 %>%
  filter(cause_of_death=="Cholera")%>%
  select(date,deaths)
  
cholera %>% head
```

```{r}
summary(cholera)
```

```{r}
#| fig-cap: "Deaths due to Cholera in London (1849)"
ggplot(cholera,aes(x=date,y=deaths))+
  geom_point()+
  geom_smooth(method = "lm")+
  labs(title="Deaths due to Cholera in London (1849)",
       x="Date",y="Cholera death")+
  theme_minimal()
```

The purpose of making a model is that to identify the inside pattern of a series of observations. This means that the model would need to be able to interpolate given observations in order to represent the overall pattern. As in the visualization above the `geom_smooth()` with the specification of the `method="lm"` helps us visualize what the direction of a linear pattern would be on this data. If it is a growing pattern or not.

Clearly the points are shaping a bell distribution of deaths in time, and this is not the case of a linear relationship between date and cholera deaths, but we would like to dig into the output of the prediction of the application of a linear model on this data and then compare it with the output of the `geom_smooth(method="lm")` line.

Let's apply a linear model to this data and make some rough predictions.

```{r}
mod <- lm(deaths ~ date, data = cholera)
summary(mod)
```

The application of a linear model on this data produced an estimation of the intercept $(\beta_0)$ and the slope $(\beta_1)$.

$$
\beta_0=29540 \text{ and } \beta_1=0.6678
$$ The intercept is the starting point of a linear model line on the y axes, while the slope is the inclination of the line, that can be positive or negative, indicating the growing or decreasing tendency of the relationship between the response and the predictor.

Let's draw this line.

```{r}
ggplot(cholera, aes(x=date, y=deaths)) + 
    geom_point() + 
    geom_abline(slope=0.6678, intercept=29540,
                col="pink")+
  theme_minimal()
```

Now calculate the prediction and the Residual Standard Error metric (RMSE) to evaluate how the model worked.

```{r}
predictions <- predict(mod, newdata = NULL)

rmse <- sqrt(mean((predictions - cholera$deaths)^2))
cat("Root Mean Squared Error (RMSE):", rmse, "\n")
```

What if we want to visualize the output of our prediction?

```{r}
ggplot(cholera, aes(x=date)) + 
  geom_point(aes(y=deaths)) + 
  geom_smooth(aes(y=deaths),method = "lm",linewidth=2)+
  geom_line(y=predictions, col="red")+
  theme_minimal()
```

Now let's use a different dataset. This data set comes from a paper by Brigham et al. (2003) that analyses some tables from Farr's report of the Registrar-General on mortality due to cholera in England in the years 1848-1849, during which there was a large epidemic throughout the country. In this case we do not have the time variable but the numbers of deaths are considered by 38 districts in London.

```         
?HistData::Cholera
```

```{r}
cholera2 <- HistData::Cholera %>%
  rownames_to_column(var="id")%>%
  select(id,district,cholera_deaths,popn)
  
cholera2 %>% head
```

The predictor in this case is a character, we are considering the relationship between the deaths rate and the districts, so we are looking at to see whether the deaths rate is different among 38 districts. The order in this case is arbitrary and this influences the pattern. The `geom_smooth()` is not drowning a line, it doesn't know how the x-axis has to be ordered, because there is not a specified order to follow.

```{r}
ggplot(cholera2, aes(x=id,y=cholera_deaths)) + 
  geom_point()+
  geom_smooth(method = "lm")+
  theme_minimal()
```

while if we set an order with `as.integer(id)`, the line can be drawn but it hasn't got much meaning. The trend is not going up or down because we are considering `districts` in the x-axis.

```{r}
ggplot(cholera2, aes(x=as.integer(id),y=cholera_deaths)) + 
  geom_point()+
  geom_smooth(method="lm")+
  theme_minimal()
```

If we consider the population, in the middle of 1849, a numeric vector, these values are by districts, each `popn` value corresponds to the level of population in one of the 38 districts. Let's see what happens if we plot `popn` versus `cholera_deaths`.

```{r}
ggplot(cholera2, aes(x=popn,y=cholera_deaths)) + 
  geom_point()+
  geom_smooth(method="lm")+
  theme_minimal()
```

Now the values on the x-axis are numeric and have a meaning to be ordered from the lower to the highest but `it is not a trend`. Each point is one district population value with some deaths due to cholera. The `geom_smooth` line it is telling us that if the level of the population is higher, the level of deaths due to cholera is higher, than in other location with a lower level of population.

But we can evaluate the growing relationship between population level and numbers of deaths due to cholera.

Let's make a linear model and predict the future, roughly.

```{r}
mod2 <- lm(cholera_deaths ~ popn , data = cholera2)
mod2
```

Let's draw this line.

```{r}
ggplot(cholera2, aes(x=popn, y=cholera_deaths)) + 
    geom_point() + 
    geom_abline(slope=0.004357, intercept=107.3,
                col="pink")+
  theme_minimal()
```

```{r}
predictions2 <- predict(mod2, newdata = NULL)

rmse <- sqrt(mean((predictions2 - cholera2$cholera_deaths)^2))
cat("Root Mean Squared Error (RMSE):", rmse, "\n")
```

What if we want to visualize the output of our prediction?

```{r}
#| fig-cap: "Cholera Deaths explanined by London Districts Population (1849)"
plot <- ggplot(cholera2, aes(x=popn)) + 
  geom_point(aes(y=cholera_deaths)) + 
  geom_smooth(aes(y=cholera_deaths),method = "lm",linewidth=2)+
  geom_line(y=predictions2, col="red")+
  labs(title="Cholera Deaths explanined by\nLondon Districts Population (1849)",
       x="1849 London Population by 38 Districts",
       y="Cholera Deaths",
       caption="William Farr's Data on Cholera in London, 1849")+
  theme_minimal()
plot
```

```{r}
#| echo: false
#| eval: false
ggsave(plot,filename="featured.png",
       width=7,height = 5,
       bg="white")
```

> Think about that!

<center>![](https://media.giphy.com/media/v1.Y2lkPTc5MGI3NjExcGJqZGFycDB0bGp4YzlhMGNiMjE3YXl0eXA4NWRmejFzNW1ha2NlNiZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/l3q2Cy90VMhfoA9BC/giphy.gif)</center>

Imagine that we absolutely want to replicate the `geom_smooth(method="lm")` line, we would need to consider some steps that the function takes in order to plot the prediction line that doesn't much with ours this time. First think to consider is that we haven't used `new data` but just produced the prediction from our dataset. But this is exactly as the same as before.

There is a function `ggplot_build()` that let's us dig into the ggplot data manipulation used to make the geom_smooth line.

```         
?ggplot_build()
```

```{r}
# source: https://stackoverflow.com/questions/42673665/geom-smooth-gives-different-fit-than-nls-alone
dat = ggplot_build(plot)$data[[2]]
dat <- dat%>%rename(cholera_drate=y,popn=x)
```

This time we use the `newdata = dat` insted of `NULL`.

```{r}
predictions3 <- predict(mod2, newdata = dat)

rmse <- sqrt(mean((predictions3 - cholera2$cholera_deaths)^2))
cat("Root Mean Squared Error (RMSE):", rmse, "\n")
```

```{r}
ggplot(cholera2, aes(x=popn)) + 
  geom_point(aes(y=cholera_deaths)) + 
  geom_smooth(aes(y=cholera_deaths),method = "lm",linewidth=2)+
  geom_line(data=dat,y=predictions3, col="red")+
  theme_minimal()
```
