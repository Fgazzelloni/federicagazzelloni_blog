{
  "hash": "52693f1a45a6e55cb8cc91e7e3ae2d72",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Statistics\"\nexcerpt: \"#30DayChartChallenge 2022 #Day9 Statistics\"\ndate: 2022-04-09\ndraft: false\nimages:\nseries:\ncategories:\nlayout: single\nexecute: \n  eval: false\n---\n\n\n\n## Overview\n\nThis is one of my favourite visualizations. It looks like very simple, and straight forward with the use of the ggdist::stat_dots function to make dotted ditributions of the wages by highest educational status reached.\n\n![](featured.png)\n\nThe Tidyverse libraries needed for the data manipulation:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n:::\n\n\nThe data set is the Wage dataset from the [{ISLR2}](https://www.statlearning.com/) package. This package contains a variety of datasets used for statistical analysis in An Introduction to Statistical Learning book.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ISLR2)\ndata(Wage)\nwage_h <- Wage%>%group_by(education)%>%summarize(avg_wage=mean(wage))\nkableExtra::kable(wage_h,row.names = F)\n```\n:::\n\n\n#### Data Wrangling\n\nA bit of data wrangling to group by education and calculate the mean value and the standard deviation of the wage.\n\n<details>\n\n\n::: {.cell}\n\n```{.r .cell-code}\nWage1 <- Wage %>%\n  mutate(education=gsub(\"\\\\d. \",\"\",education)) %>% #count(year)\n  group_by(education)%>%\n  mutate(mean=mean(wage),\n         sd=sd(wage)) %>%\n  ungroup() %>% # pull(mean)%>%summary\n  select(education,mean,sd) %>%\n  distinct()\n```\n:::\n\n\n</details>\n\n#### Set some extrafonts:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(extrafont)\n# loadfonts()\n```\n:::\n\n\nFor this visualization I used: family = \"Chelsea Market\"\n\n#### And finally, to make the plot, use:\n\n-   ggdist::stat_dots to make the dots ditribution\n-   distributional::dist_normal to normalize the data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggdist)\nlibrary(distributional)\n```\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nWage1 %>%\nggplot(aes(y=fct_reorder(education,mean),\n             xdist = dist_normal(mean, sd),\n             layout = \"weave\",\n             fill = stat(x < 111.70))) + \n  stat_dots(position = \"dodge\", color = \"grey70\")+\n  geom_vline(xintercept = 111.70, alpha = 0.25) +\n  scale_x_continuous(breaks = c(20,60,90,112,140,180,220)) +\n  tvthemes::scale_fill_hilda()+\n  # add a title / subtitle and a caption ------\n  labs(x=\"Wage values from 2003 to 2009\",\n       y=\"\",color=\"Race\",fill=\"wage < avg\",\n       title=\"Wage distribution vs education 2003-2009\",\n       subtitle=\"Normalized values\",\n       caption=\"#30DayChartChallenge 2022 #day9 - Distribution/Statistics - v2\\nDataSource: {ISLR2} Wage dataset | DataViz: Federica Gazzelloni\") +\n  # set a customized theme -------\n  tvthemes::theme_avatar() +\n  theme(text = element_text(family=\"Chelsea Market\"),\n        legend.background = element_blank(),\n        legend.box.background = element_blank(),\n        legend.key = element_blank(),\n        legend.key.width = unit(0.5,units=\"cm\"),\n        legend.direction = \"horizontal\",\n        legend.position = c(0.8,0.1))\n```\n:::\n\n\nIf you'd like to save it as .png you can do it with `ggsave()`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggsave(\"day9_statistics_v2.png\",\n       dpi=320,\n       width = 9,\n       height = 6)\n```\n:::\n\n\n## Resources:\n\n-   [An Introduction to Statistical Learning](https://www.statlearning.com/)\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}